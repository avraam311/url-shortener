// Code generated by MockGen. DO NOT EDIT.
// Source: handler.go

// Package mock_url is a generated GoMock package.
package mock_url

import (
	context "context"
	reflect "reflect"

	dto "github.com/avraam311/url-shortener/internal/models/dto"
	gomock "github.com/golang/mock/gomock"
)

// MockServiceURL is a mock of ServiceURL interface.
type MockServiceURL struct {
	ctrl     *gomock.Controller
	recorder *MockServiceURLMockRecorder
}

// MockServiceURLMockRecorder is the mock recorder for MockServiceURL.
type MockServiceURLMockRecorder struct {
	mock *MockServiceURL
}

// NewMockServiceURL creates a new mock instance.
func NewMockServiceURL(ctrl *gomock.Controller) *MockServiceURL {
	mock := &MockServiceURL{ctrl: ctrl}
	mock.recorder = &MockServiceURLMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockServiceURL) EXPECT() *MockServiceURLMockRecorder {
	return m.recorder
}

// CreateShortURL mocks base method.
func (m *MockServiceURL) CreateShortURL(arg0 context.Context, arg1 *dto.FullURL) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateShortURL", arg0, arg1)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateShortURL indicates an expected call of CreateShortURL.
func (mr *MockServiceURLMockRecorder) CreateShortURL(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateShortURL", reflect.TypeOf((*MockServiceURL)(nil).CreateShortURL), arg0, arg1)
}

// GetFullURL mocks base method.
func (m *MockServiceURL) GetFullURL(arg0 context.Context, arg1 string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFullURL", arg0, arg1)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetFullURL indicates an expected call of GetFullURL.
func (mr *MockServiceURLMockRecorder) GetFullURL(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFullURL", reflect.TypeOf((*MockServiceURL)(nil).GetFullURL), arg0, arg1)
}
